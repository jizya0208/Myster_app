<h3>コーディネート投稿</h3>

<%= form_with model: @article,local: true do |f| %>
	<div class="flex">
		<div>
			<%= f.label :image %>
			<div class="image_field">
			  <span class="btn btn-file btn-info"><%= f.attachment_field :image %>画像選択</span>
				<%= attachment_image_tag @article, :image, format: "jpeg", id: "img_prev", fallback: "no-image.png", class: "article_image" %>
				<p>選択するとプレビューされます。</p>
			</div>
		</div>
		<table class="admin_item_info item_form">
			<thead>
				<tr>
					<th></th>	
					<th></th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td><%= f.label :title, "タイトル" %></td>
					<td><%= f.text_field :title %></td>
				</tr>
				<tr>
					<td><%= f.label :body, "本文" %></td>
					<td><%= f.text_area :body, rows: 3 %></td>
				</tr>
				<tr>
					<td><%= f.label :category_id, "カテゴリー" %></td>
					<td class="select_field"><%= f.collection_select :category_id, Category.all, :id, :name %></td>
				</tr>
			</tbody>
		</table>
		<div class="flex align-center pl5">
			<%= f.submit "投稿する", class: "btn btn-primary" %>
		</div>
	</div>
<% end %>


<script>
  $('#article_image').on('change', function (e) { 　　//ユーザがフォーム(input要素)に変更を加えた時にイベント発火。eには、article_imageのデータが入っている状態
    var reader = new FileReader();                    //FileReaderオブジェクトを生成し、変数へ代入。FileReaderは、BlobやFileが保有するバッファを非同期で読み取ることが出来る
    reader.onload = function (e) {                    //画像の読込が完了した後にイベント発火
      $("#img_prev").attr('src', e.target.result);　  //img要素のsrc属性の中身を置換する。e.target=イベントを発生させたオブジェクト。result属性=FileReaderの読取ったファイルが文字列として格納される。　
    }
    reader.readAsDataURL(e.target.files[0]);          //readAsDataURLメソッドで、指定されたBlob又はFileのファイルの読込みとそのURL生成を行う。
});
</script>