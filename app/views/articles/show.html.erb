<div class="container">
  <div class="row">
    <div class="col-lg-9 main">
      <div class="row">
        <div class="col-lg-2 date text-right"><p><%= @article.created_at.strftime('%Y') %><span><%= @article.created_at.strftime('%m/%d') %></span></p></div>
        <div class="col-lg-10 text-center"><h3>Title: <%= @article.title %></h3><p class="text-center">by <%= @article.member.name %><span></div>
      </div>
        <div class="container">
          <div class="row">
          　<div class="col-md-6" id="wrap">
              <% if @article.article_images.present? %>
                <ul id="slider">
                <% @article.article_images.each do |article_image| %>
                  <li class="slide-item">
                    <%= attachment_image_tag article_image, :image, :fill, 300, 400, format: 'png' %>
                   </li>
                <% end %>
                </ul>
                <ul id="thumbnail-list">
                <% @article.article_images.each do |article_image| %>
                  <li class="thumbnail-item">
                    <%= attachment_image_tag article_image, :image, :fill, 50, 50, format: 'png' %>
                   </li>
                <% end %>
                </ul>
              <% else %>
                <%= image_tag 'no-image.png' %>
              <% end %>
            </div>

            <script>
              document.addEventListener("turbolinks:load", $(function(){
              var slider = "#slider";                                // スライダー
              var thumbnailItem = "#thumbnail-list .thumbnail-item"; // サムネイル画像アイテム

              $(thumbnailItem).each(function(){
               var index = $(thumbnailItem).index(this); // indexメソッドはレシーバであるオブジェクトが最初から何番目にあるかを整数で返す役割
               $(this).attr("data-index",index);         // サムネイル画像アイテムのdata-index属性にindex番号を付与
              });

              $(slider).on('init',function(slick){     　// init => slickのイベント。スライダー初期化後に発火
               var index = $(".slide-item .slick-slide .slick-current").attr("data-slick-index"); //slick.jsがスライドにした要素には"data-slick-index"というスライド内の通し番号（0~)を付与した属性が自動生成される。
               $(thumbnailItem+'[data-index="'+index+'"]').addClass("thumbnail-current"); //カレントのサムネイル画像にクラス「thumbnail-current」を付ける
              });

              $(slider).slick({                          //slickスライダー初期化
                autoplay: true,
                arrows: false,
                fade: true,
                infinite: false                          //スライドのループを無効にする
              });

              $(thumbnailItem).on('click',function(){    //サムネイル画像アイテムをクリックしたときにイベント発火
                var index = $(this).attr("data-index");  //クリックされた要素のdata-index属性の値を取得
                $(slider).slick("slickGoTo",index,false);//slideGoToで指定したスライドの位置にスライダーを切り替える
              });

              $(slider).on('beforeChange',function(event, slick, currentSlide, nextSlide){      //「beforeChange」でslickのスライドが切り替わる直前にイベント発火
                $(thumbnailItem).each(function(){
                  $(this).removeClass("thumbnail-current");                                     // 全てのサムネイル画像アイテムからクラス「thumnail-current」を排除
                });
                $(thumbnailItem+'[data-index="'+nextSlide+'"]').addClass("thumbnail-current");  //「beforeChange」の引数「nextSlide」は切り替わるスライドのindex番号を返すので、nextSlideの値でカレントのサムネイル画像アイテムを特定し、クラス「thumbnail-current」を付ける
              });
            });
            </script>

            <div class="col-md-5">
              <div id="article_<%= @article.id %>">  <!--複数ある投稿から1つを特定するため、識別子に投稿IDを含める-->
                <h4>Text</h4>
                <p class="mt-3"><%= render_with_tags(@article.body) %></p>
                <!--お気に入り,コメント一覧のパーシャル呼び出し-->
                <a class="favorite-btn"><%= render 'favorites/favorite-btn', article: @article %></a>
                <!--ログインユーザと投稿者が同一の場合、削除ボタンを表示-->
                <% if current_member == @article.member %>
                  <span><%= link_to '', article_path(@article), method: :delete, data: { confirm: 'この投稿を削除しますか？', cancel: 'キャンセル',commit: 'OK', title: '投稿削除'}, class: "destroy_article_#{@article.id} fas fa-trash-alt" %></span>
                  <!--上記且つ、相談ステータスが相談中の場合、更新ボタンを表示-->
                  <% if @article.is_closed ==  false %>
                    <span><%= link_to '', article_path(@article), method: :patch, data: { confirm: 'ステータス解決済みにすると回答募集ページへの掲示を終了します。本当によろしいですか？', cancel: 'キャンセル',commit: 'OK', title: '相談ステータス更新'}, class: "update_article_#{@article.id} fas fa-check-circle"%></span>
                  <% end %>
                <% end %>

                <p class="comments-count mt-3"><%= @article.article_comments.count %></p>


                <table class="article_comments">
                  <%= render partial: 'article_comments/index', locals: { :article => @article, :article_comment => @article_comment } %>
                  <h4 class="mb-5">Comments</h4>
                  <%= form_with model:[@article,@article_comment] do |f| %>  <!--新規コメントフォーム。インスタンス変数を2つ渡すことで、どの投稿に結びつくコメントかよしなに見つけてくれる-->
                    <%= f.text_area :body, size:"30x6" %>
                    <%= f.attachment_field :image %>
                    <%= f.submit '送信'%>
                  <% end %>
                </table>
              </div>
              </div>
            </div>
           </div>
        </div>
      <div class="col-lg-2 side-bar">
        <%= render 'members/info', member: current_member %>
    </div>
  </div>
</div>
